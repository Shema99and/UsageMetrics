<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.5.0</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<groupId>com.zifo.ewb.integrationapi</groupId>
	<artifactId>Test</artifactId>
	<version>0.1</version>
	<packaging>war</packaging>
	<name>Alliance_BA</name>

	<properties>
		<java.version>21</java.version>
		<tomcat.version>10.1.44</tomcat.version>
		<ecs.logging.java.version>1.7.0</ecs.logging.java.version>
		<maven.compiler.source>21</maven.compiler.source>
		<maven.compiler.target>21</maven.compiler.target>
		<spring-cloud.version>2023.0.3</spring-cloud.version>
		<!-- SonarQube Properties -->
		<sonar.sources>src/main/java</sonar.sources>
		<sonar.tests>src/test/java</sonar.tests>
		<sonar.binaries>${project.build.directory}/classes</sonar.binaries>
		<sonar.coverage.jacoco.xmlReportPaths>
			${project.build.directory}/site/jacoco/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
		<sonar.inclusions>src/main/java/**/*</sonar.inclusions>
		<ecs.logging.java.version>1.7.0</ecs.logging.java.version>
	</properties>
	<dependencies>
		<!-- Spring Web (excludes default Logback) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Spring WebFlux -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>

		<!-- JSON processing -->
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20231013</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>


		<!-- Devtools -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- Embedded Tomcat (provided for WAR) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Testing -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>com.vaadin.external.google</groupId>
					<artifactId>android-json</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>io.projectreactor</groupId>
			<artifactId>reactor-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- CodeModel (for code generation) -->
		<dependency>
			<groupId>com.sun.codemodel</groupId>
			<artifactId>codemodel</artifactId>
			<version>2.4</version>
		</dependency>

		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>2.6.0</version>
		</dependency>

		<!-- JSON-Schema-to-POJO plugin & core -->
		<dependency>
			<groupId>org.jsonschema2pojo</groupId>
			<artifactId>jsonschema2pojo-maven-plugin</artifactId>
			<version>1.1.1</version>
		</dependency>
		<dependency>
			<groupId>org.jsonschema2pojo</groupId>
			<artifactId>jsonschema2pojo-core</artifactId>
			<version>1.1.1</version>
		</dependency>

		<!-- Swagger UI -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.6.1</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.10.0</version>
		</dependency>

		<!-- External JAX-RS providers & config -->
	<!--	<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-atom-provider</artifactId>
			<version>3.0.8.Final</version>
		</dependency>-->
		<dependency>
			<groupId>commons-configuration</groupId>
			<artifactId>commons-configuration</artifactId>
			<version>1.6</version>
		</dependency>

		<!-- Apache Commons -->
	<!--	<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>4.1</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
		</dependency>-->
		<!--<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.3.2</version>
		</dependency>-->

		<!-- HTTP Clients -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpcore</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5.13</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpmime</artifactId>
			<version>4.3</version>
		</dependency>

		<!-- Jackson JAX-RS (v1) -->
		<!--<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-jaxrs</artifactId>
			<version>1.9.0</version>
		</dependency>
-->
		<!-- Logging -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>

		<dependency>
			<groupId>co.elastic.logging</groupId>
			<artifactId>ecs-logging-core</artifactId>
			<version>${ecs.logging.java.version}</version>
		</dependency>

		<dependency>
			<groupId>co.elastic.logging</groupId>
			<artifactId>log4j2-ecs-layout</artifactId>
			<version>${ecs.logging.java.version}</version>
		</dependency>
		
		 <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-webmvc</artifactId>
                <version>6.2.11</version>
            </dependency>


		<!-- Lombok -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<build>
		<finalName>Alliance BA</finalName>
		<plugins>
			<!-- Spring Boot Maven plugin -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<!-- ensure compilation under Java 21 -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<release>21</release>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.3.1</version>

				<configuration>
					<argLine>${surefireArgLine}</argLine>
					<useSystemClassLoader>false</useSystemClassLoader>
					<!-- Avoid module-path issues with JDK 21 and let Spring
					Boot manage JUnit
                    versions -->
					<useModulePath>false</useModulePath>
					<includes>
						<include>**/*Test.java</include>
						<include>**/Test*.java</include>
						<include>**/*Tests.java</include>
					</includes>
				</configuration>
				<!-- No plugin-level JUnit deps; Spring Boot starter-test brings
				the right JUnit 5
                platform -->
			</plugin>
			<!--<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<argLine>${surefireArgLine}</argLine>
					<useSystemClassLoader>false</useSystemClassLoader>
					<includes>
						<include>**/*Test.java</include>
						<include>**/Test*.java</include>
						<include>**/*Tests.java</include>
					</includes>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.junit.jupiter</groupId>
						<artifactId>junit-jupiter-engine</artifactId>
						<version>5.11.3</version>
					</dependency>
					<dependency>
						<groupId>org.junit.vintage</groupId>
						<artifactId>junit-vintage-engine</artifactId>
						<version>5.11.3</version>
					</dependency>
				</dependencies>
			</plugin>-->

			<!-- SonarQube Maven Plugin -->
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>4.0.0.4121</version>
			</plugin>

			<!-- JaCoCo Maven Plugin -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.11</version>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<phase>initialize</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${project.build.directory}/jacoco.exec</destFile>
							<propertyName>surefireArgLine</propertyName>
							<excludes>
								<exclude>**/*_$$_*.class</exclude>
							</excludes>
						</configuration>
					</execution>
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/jacoco.exec</dataFile>
							<outputDirectory>
								${project.build.directory}/site/jacoco</outputDirectory>
							<formats>
								<format>XML</format>
							</formats>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<repositories>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
		</repository>
	</repositories>

	<description>Project Download API</description>
</project>
